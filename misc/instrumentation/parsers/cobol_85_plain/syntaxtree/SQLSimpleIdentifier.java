//
// Generated by JTB 1.3.2
//

package org.codecover.instrumentation.cobol85.syntaxtree;

/**
 * Grammar production:
 * <PRE>
 * f0 -> Identifier() ( &lt;DOTCHAR&gt; Identifier() )*
 *       | SQLParameter()
 *       | SQLLiteral()
 *       | sqlOneParamFunction()
 *       | sqlSubstrFunction()
 *       | ( &lt;CURRENT&gt; ( &lt;DATE&gt; | &lt;TIMESTAMP&gt; ) )
 * </PRE>
 */
public class SQLSimpleIdentifier implements Node {
   private Node parent;
   public NodeChoice f0;

   public SQLSimpleIdentifier(NodeChoice n0) {
      f0 = n0;
      if ( f0 != null ) f0.setParent(this);
   }

   public void accept(org.codecover.instrumentation.cobol85.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(org.codecover.instrumentation.cobol85.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(org.codecover.instrumentation.cobol85.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(org.codecover.instrumentation.cobol85.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
   public void setParent(Node n) { parent = n; }
   public Node getParent()       { return parent; }
}

