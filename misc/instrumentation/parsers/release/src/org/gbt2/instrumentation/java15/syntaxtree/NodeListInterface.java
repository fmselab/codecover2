///////////////////////////////////////////////////////////////////////////////
//
// $Id: NodeListInterface.java 1 2007-12-12 17:37:26Z t-scheller $
// 
// created by: Christoph Müller
// created at: 24.02.2007 17:30:00
//
///////////////////////////////////////////////////////////////////////////////

//
// Generated by JTB 1.3.2
//

package org.gbt2.instrumentation.java15.syntaxtree;

import java.io.IOException;

import org.gbt2.instrumentation.java15.visitor.GJNoArguVisitor;
import org.gbt2.instrumentation.java15.visitor.GJVisitor;
import org.gbt2.instrumentation.java15.visitor.GJVoidVisitor;
import org.gbt2.instrumentation.java15.visitor.Visitor;
import org.gbt2.instrumentation.java15.visitor.VisitorWithException;

/**
 * The interface which NodeList, NodeListOptional, and NodeSequence implement.
 */
public interface NodeListInterface extends Node {
    public void addNode(Node n);

    public Node elementAt(int i);

    public java.util.Enumeration<Node> elements();

    public int size();

    public void accept(VisitorWithException v) throws IOException;

    public void accept(Visitor v);

    public <R, A> R accept(GJVisitor<R, A> v, A argu);

    public <R> R accept(GJNoArguVisitor<R> v);

    public <A> void accept(GJVoidVisitor<A> v, A argu);
}
